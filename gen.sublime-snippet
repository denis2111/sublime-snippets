<snippet>
	<content><![CDATA[
import sys

from random import randint, choice, shuffle, uniform, sample
from math import gcd, sqrt
from string import ascii_lowercase, ascii_uppercase

chars = ['0', '1']

def random_string(n, chars = ascii_lowercase):
	return "".join([choice(chars) for _ in range(n)])

def print_list(l, sep = " "):
	print(sep.join([str(item) for item in l]))

def gen_graph_edges(n, m):
	edges = []
	for i in range(1, n):
		edges.append((randint(0, i - 1), i))
	for nr in range(n, m + 1):
		edges.append((randint(0, n - 1), randint(0, n - 1)))
	return edges

def get(V):
	v = 1
	while True:
		p = randint(1, 10)
		if p == 1 and v > 10 ** 5:
			break
		if v * p <= V:
			v *= p
	return v

def isPrime(x):
	d = 2
	while d * d <= x:
		if x % d == 0:
			return False
		d += 1
	return True

n, m, k = randint(5, 10), randint(5, 10), randint(5, 10)
chars = list(ascii_lowercase[:k])
chars2 = chars + ['~']

print(m, n, k)
for i in range(k):
	print(chars[i], choice(chars2), choice(chars2), choice(chars2), choice(chars2))

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>__gen</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
