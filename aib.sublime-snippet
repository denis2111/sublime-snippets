<snippet>
	<content><![CDATA[
template<class T = int>
struct AIB {
  int n;
  T* aib;

  AIB(int _n) {
    aib = new T[_n+1];
    n = _n + 1;
  }

  void update(int p, T val) {
    for(; p < n; p += p & (-p)) aib[p] += val;
  }

  T query(int p) {
    T res;
    for(res = 0; p; p &= p - 1) res += aib[p];
    return res;
  }

  // get sum on interval [l,r]
  T query(int l, int r) {
    return query(r) - query(l - 1);
  }

  void reset() {
    memset(aib, 0, sizeof(T) * n);
  }
};
// AIB<int> aib(n) <--- before c++17 you need to specify the type



]]></content>
	<tabTrigger>__AIB</tabTrigger>
	<!-- <scope>source.python</scope> -->
</snippet>
